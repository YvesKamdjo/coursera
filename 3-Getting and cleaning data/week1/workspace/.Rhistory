install.packages("devtools")
find.packages("devtools")
find.packages("devtools")
install.packages("devtools")
install.packages("KernSmooth")
library(KernSmooth)
library(datasets)
data("iris")
?iris
a<- data("iris")
x<- lapply(a,mean)
a
a <- data(iris)
a
a <- iris
a
x <- lapply(a,mean)
x <- lapply(a$Sepal.Length)
x <- lapply(a$Sepal.Length,mean)
x
x <- mean(a$Sepal.Length)
x
a
b <- subset(a,a$Species='virginica')
b <- subset(a,a$Species=='virginica')
b
y <- mean(b$Sepal.Length)
y
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
rowMeans(a,dims = 4)
?rowMeans
rowMeans(a,dims = 2)
rowMeans(a$Sepal.Length,dims = 2)
rowMeans(a,dims = 1)
rowMeans(iris[,1:1],dims=2)
rowMeans(iris[,1:2],dims=2)
rowMeans(iris[,1:2],dims=1)
rowMeans(iris[,1:2],dims=2)
rowMeans(iris[,1:4],dims=2)
rowMeans(iris[,1],dims=1)
colMeans(iris[,1],dims=1)
colMeans(iris[,1],dims=2)
colMeans(iris[,1:1],dims=2)
colMeans(iris[,1:2],dims=2)
colMeans(iris[,1:2],dims=1)
colMeans(iris[,1:1],dims=1)
colMeans(iris[,1:4],dims=1)
mt <- data("mtcars")
mt
?mtcars
m<- mtcars
mapply(rep,1:4,4:1)
mapply(rep,1:2,4:1)
mapply(rep,1:2,1:1)
mapply(rep,1:2,3:1)
?rep
mapply(rep,1:2,6:1)
?Rprof
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
?lm
y<- 4
x1<- 2
x2<- 3
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
?dpois
?ppois
set.seed(1)
rpois(5, 2)
setwd("C:/Users/Julien/Google Drive/Coursera/3-Getting and cleaning data/week1/workspace")
colind <- 18:23
rowind <- 18:23
colind <- 7:15
library(xlsx)
read.xlsx('quizze2.xlsx',sheetIndex = 1,colIndex = colind,rowIndex = rowind)
?read.xlsx
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",'quizz1_q3.xlsx')
list.files()
read.xlsx('quizze1_q3.xlsx',sheetIndex = 1,colIndex = colind,rowIndex = rowind)
read.xlsx('quizz1_q3.xlsx',sheetIndex = 1,colIndex = colind,rowIndex = rowind)
read.xlsx('quizz1_q3.xlsx',sheetIndex = 1,colIndex = colind,rowIndex = rowind)
read.xlsx('quizz1_q3.xls',sheetIndex = 1,colIndex = colind,rowIndex = rowind)
read.xlsx('week12.xlsx',sheetIndex = 1,colIndex = colind,rowIndex = rowind)
file_xlsx <-read.xlsx('week12.xlsx',sheetIndex = 1,colIndex = colind,rowIndex = rowind)
dat<-read.xlsx('week12.xlsx',sheetIndex = 1,colIndex = colind,rowIndex = rowind)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file('https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml','xml1.xml')
library(XML)
install.packages("XML")
library(XML)
install.packages("XML")
install.packages("XML")
doc <- xml2::read_xml('xml1.xml')
head(doc)
rootNode <- xml2::xml_structure(doc)
rootNode <- xml2::xml_contents(doc)
head(rootNode)
xml2::xml_name(rootNode)
rootNode$row
rootNode[1]
rootNode[1][1]
xml2::xml_length(doc)
xml2::xml_length(rootNode)
xml2::xml_length(rootNode[1])
node2 <- rootNode[1]
node2
node2 <- xml2::xml_attr('row')
node2 <- xml2::xml_att(doc,'row')
node2 <- xml2::xml_att(rootNode,'row')
install.packages("C:/Users/Julien/Desktop/XML_3.98-1.3.zip", repos = NULL, type = "win.binary")
library(XML)
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileurl,useInternalNodes = TRUE)
fileuri <- 'xml1.xml'
doc <- xmlTreeParse(fileuri,useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
row1 <- rootNode[1]
xmlName(row1)
xmlSApply(rootNode,xmlValue)
values <- xmlSApply(rootNode,xmlValue)
head(values)
doc <- htmlTreeParse(fileuri,userInternal=TRUE)
doc <- htmlTreeParse(fileuri)
rows_id <- xpathSApply(doc,"//li[@class='row'",xmlValue)
rows_id <- xpathSApply(rootNode,"//row",xmlValue)
head(rows_id)
summary(rows_id)
c1 <- xpathSApply(rootNode,"//row_id[@zipcode='21231'",xmlValue)
c1 <- xpathSApply(rows_id,"//row_id[@zipcode='21231'",xmlValue)
c1 <- xpathSApply(rows_id,"//row[@zipcode='21231'",xmlValue)
c1 <- xpathSApply(rootNode,"//row[@zipcode='21231'",xmlValue)
c1 <- xpathSApply(rootNode,"//row[@zipcode='21231']",xmlValue)
summary(c1)
c1 <- xpathSApply(rootNode,"//row_id[@zipcode='21231']",xmlValue)
summary(c1)
c1 <- xpathSApply(rootNode,"//row_id[@zipcode='21231']",xmlValue)
length(c1)
c1
c1 <- xpathSApply(rootNode,"row_id[@zipcode='21231']",xmlValue)
length(c1)
c1
c1 <- xpathSApply(rootNode,"row[@zipcode='21231']",xmlValue)
length(c1)
c1 <- xpathSApply(rootNode,"//row",xmlValue)
head(c1,6)
summary(c1)
names(c1)
c1 <- xpathSApply(rootNode,"//row_id",xmlValue)
names(c1)
c1 <- xpathSApply(rootNode,"//row",xmlValue)
c1[1]
length(c1)
names(c1)
?fread
??fread
install.packages("data.table")
?fread
install.packages("C:/Users/Julien/Desktop/data.table_1.9.6.zip", repos = NULL, type = "win.binary")
?fread
library(data.table)
?fread
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
fileUrl
download.file(fileUrl,"q5.csv")
fileData <- fread(fileUrl)
fileData <- fread(fileUrl,header = TRUE)
DT <- fread(fileUrl,header = TRUE)
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
q2 <- read.csv("quizze11.csv")
head(q2$FES,6)
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15), mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
proc.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
?proc.time
ptm <- proc.time()
ptm <- proc.time()
sapply(split(DT$pwgtp15,DT$SEX),mean)
proc.time() - ptm
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
DT <- fread(f)
check <- function(y, t) {
message(sprintf("Elapsed time: %.10f", t[3]))
print(y)
}
t <- system.time(y <- sapply(split(DT$pwgtp15, DT$SEX), mean))
check(y, t)
t <- system.time(y <- DT[,mean(pwgtp15),by=SEX])
check(y, t)
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
?system.time
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
DT <- fread(f)
check <- function(y, t) {
message(sprintf("Elapsed time: %.10f", t))
print(y)
}
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
DT <- fread(f)
check <- function(y, t) {
##message(sprintf("Elapsed time: %.10f", t))
print(t)
print(y)
}
t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
check(y, t)
?apply
?tapply
?sapply
